/*
----------------------------------------------------------------------------------------
    GeneLab Data Processing RNA-Seq Workflow Nextflow config file
----------------------------------------------------------------------------------------
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {
    mode                        = 'default' // Set to 'microbes' for processing microbes (Bowtie2)
    dp_tools_plugin             = null      // Path to dp_tools plugin
    api_url                     = "https://osdr.nasa.gov/osdr/data/search?ffield=Study+Assay+Technology+Type&fvalue=RNA+Sequencing+%28RNA-Seq%29&size=2000"      // URL to the json page for the relevant OSDR data
    output_suffix               = '_GLbulkRNAseq' // Suffix to append to output filenames
    
    // Input options
    accession                   = null // Accession number (OSD-# or GLDS-#)
    runsheet_path               = null // For OSDR datasets, runsheet will be generated based on the ISA.zip associated with the dataset
    isa_archive_path            = null // If a runsheet is not supplied, ISA.zip will be pulled from OSDR unless this is supplied
    stage_local                 = true // Whether to download the raw reads to the filesystem. Currently deprecated. Will be reimplemented with a subworkflow which stops after parsing the runsheet.
    
    // Debugging input options
    limit_samples_to            = null // Limit the number of samples to process
    genome_subsample            = null  // Subsamples the reference genome to the specified region / chromosome
    truncate_to                 = false // Subsamples the raw reads files to the specified number of reads for EACH raw reads file.
    force_single_end            = false // Use only read 1 for all samples, even if the original data is paired-end
    use_dummy_gene_counts       = false // Uses random gene counts during DESEQ2 (This addresses testing when actual gene counts are near-zero/zero)

    // References
    reference_table             = "https://raw.githubusercontent.com/nasa/GeneLab_Data_Processing/refs/heads/master/GeneLab_Reference_Annotations/Pipeline_GL-DPPD-7110_Versions/GL-DPPD-7110-A/GL-DPPD-7110-A_annotations.csv"
    reference_store_path        = './References' // Dictates where the reference fasta, gtf will be stored
    derived_store_path          = './DerivedReferences' // Dictates where the derived reference files (locally built indexes) will be stored
    reference_source            = null // Reference files (genome, gtf) source - 'ensembl', 'ensembl_bacteria', 'ensembl_plants', or 'ncbi'
    reference_version           = null // Reference version
    reference_fasta             = null
    reference_gtf               = null
    
    // Alignment
    // currently no alignment parameters
    
    // QC
    multiqc_config              = "${projectDir}/conf/multiqc.config"
    validate_params             = true // Schema validation is on by default
    skip_vv                     = false
    max_flag_code               = 80
    rseqc_sample_count          = 15000000

    // Boilerplate options
    outdir                      = './results'
    publish_dir_mode            = 'link'
    email                       = null
    version                     = false
    help                        = false
}

// Default publishing logic for pipeline
// process {
//     publishDir = [
//         path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
//         mode: params.publish_dir_mode,
//         saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
//     ]
// }

// Profiles:
// The following profile definitions are used to set environments for the pipeline.
//  Configs can be used to set executor configs, container profiles, tag and process-specific resource allocations, retry strategies, etc.

// The default executor profile is slurm which is defined under the profile 'slurm'. There is no default container-based profile.
//  To run processes locally, you must set the profile to local with 'nextflow run main.nf ... --profile local'

// By default, the container profile is not set meaning that the local environment is used.
//  The container profile is set using 'nextflow run main.nf ... --profile <profile_name>' 

// Multiple profiles can be set in the nextflow run command, e.g. 'nextflow run main.nf ... --profile <executor_profile>,<container_profile>'

// See https://www.nextflow.io/docs/latest/config.html#config-profiles for more information


profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
        includeConfig 'conf/by_docker_image.config'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        includeConfig 'conf/by_docker_image.config'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test          { includeConfig 'conf/test.config'       }
    slurm         { includeConfig 'conf/slurm.config'      } 
    local         { includeConfig 'conf/local.config'      }
}

// Set default registry for Docker and Singularity

// Adapted from : https://github.com/nf-core/rnaseq/blob/master/nextflow.config
def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/nextflow_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/nextflow_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/nextflow_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/nextflow_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'NASA GeneLab Data Processing RNA-Seq Pipeline'
    homePage        = 'https://github.com/nasa/GeneLab_Data_Processing/tree/master/RNAseq'
    description     = 'RNA-Seq Pipeline for Document GL-DPPD-7101-G.'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.4'
    version         = '2.0.0'
}
