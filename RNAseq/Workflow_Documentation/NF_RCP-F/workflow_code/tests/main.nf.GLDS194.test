nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"

    test("GLDS-194:Mouse,PairedEnd,ERCC: Should run without failures") {

        when {
            params {
                gldsAccession = 'GLDS-194' // GeneLab Data Accession Number, e.g. GLDS-104
                use_dummy_gene_counts = true // Use random gene counts for Deseq2, this addresses an issue where low/zero gene counts causes DGE analysis to fail
                genomeSubsample = 19 // Subsamples the reference fasta and gtf to a single sequence (often representing a single chromosome)
                truncateTo = 300 // Subsamples the raw reads files to the specified number of reads for EACH raw reads file.
            }
        }

        then {
            def TEST_DATASET = "GLDS-194"
            assert workflow.success
            assert snapshot(
                            path("${params.outputDir}/GLDS-194/Metadata").list(),
                            path("${params.outputDir}/GLDS-194/00-RawData/Fastq").list(),
                            path("${params.outputDir}/GLDS-194/01-TG_Preproc/Fastq").list(),
                            path("${params.outputDir}/${ TEST_DATASET }/02-STAR_Alignment/STAR_NumNonZeroGenes.csv"),
                            path("${params.outputDir}/${ TEST_DATASET }/02-STAR_Alignment/STAR_Unnormalized_Counts.csv"),
                            path("${params.outputDir}/GLDS-194/03-RSEM_Counts/Mmus_BAL-TAL_LRTN_BSL_Rep1_B7.genes.results"),
                            path("${params.outputDir}/GLDS-194/03-RSEM_Counts/Mmus_BAL-TAL_LRTN_BSL_Rep1_B7.isoforms.results"),
                            path("${params.outputDir}/GLDS-194/03-RSEM_Counts/RSEM_NumNonZeroGenes.csv"),
                            path("${params.outputDir}/GLDS-194/03-RSEM_Counts/RSEM_Unnormalized_Counts.csv"),
                            path("${params.outputDir}/GLDS-194/04-DESeq2_NormCounts").list(),
                            path("${params.outputDir}/GLDS-194/05-DESeq2_DGE").list(),
                            path("${params.outputDir}/GLDS-194/GeneLab").list(),
                            path("${params.outputDir}/GLDS-194/RSeQC_Analyses/02_geneBody_coverage/Mmus_BAL-TAL_LRTN_BSL_Rep1_B7/Mmus_BAL-TAL_LRTN_BSL_Rep1_B7.geneBodyCoverage.txt"),
                            path("${params.outputDir}/GLDS-194/RSeQC_Analyses/03_infer_experiment/Mmus_BAL-TAL_LRTN_GC_Rep3_G9_infer_expt.out"),
                            path("${params.outputDir}/GLDS-194/RSeQC_Analyses/04_inner_distance/Mmus_BAL-TAL_LRTN_FLT_Rep2_F7/Mmus_BAL-TAL_LRTN_FLT_Rep2_F7.inner_distance.txt"),
                            path("${params.outputDir}/GLDS-194/RSeQC_Analyses/05_read_distribution/Mmus_BAL-TAL_RRTN_BSL_Rep4_B10_read_dist.out"),
                            ).match()
        }
    }
}
